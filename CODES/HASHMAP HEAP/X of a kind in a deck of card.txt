class Solution {
    public boolean hasGroupsSizeX(int[] deck) {
        HashMap<Integer,Integer> map = new HashMap<>();
        
        for(int val:deck){
            
            map.put(val,map.getOrDefault(val,0)+1);     // filling the frequency Map
}
        int i=0;
        int gcd=1;
        
        for(int key:map.keySet()){
            if(i==0){
                gcd = map.get(key);        // starting me gcd wahi hoga jo i=0 par h
            }
            else{
                int num = map.get(key);
                gcd = getGCD(num,gcd);      // previous frq index and current frq index ka GCD nikalege
            }
            i++;
        }
        if(gcd>=2){                 // according to question demand
            return true;
        }else{
            return false;
        }
    }
    
    public int getGCD(int n1, int n2){          // GCD find
        
        while(n1 % n2 !=0){
            int rem= n1 % n2;
            n1= n2;
            n2= rem;
        }
        return n2;
    }
}